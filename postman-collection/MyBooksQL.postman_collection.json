{
	"info": {
		"_postman_id": "1dd5652a-a40c-4b9b-83dd-4a33b5cb1558",
		"name": "MyBooksQL",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Author",
			"item": [
				{
					"name": "Get Authors",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\n    authors {\n        id\n        name\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:8083/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8083",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Author by id",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\n    author(authorId: \"d5bcdc96-22c7-4ae0-a4f0-181a3b80d4cf\") {\n        id\n        name\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:8083/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8083",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Book",
			"item": [
				{
					"name": "Get Books",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\n    books {\n        id\n        title\n        subtitle\n        publicationDate\n        isbn10\n        isbn13\n        idGoogle\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:8083/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8083",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Book",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createBook($book: BookInput!) {\n    createBook(book: $book) {\n        id\n        title\n        subtitle\n        synopsis\n        authors {\n            name\n        }\n        publicationDate\n        categories\n        isbn10\n        isbn13\n        idGoogle\n    }\n}",
								"variables": "{\r\n    \"book\": {\r\n        \"title\": \"Choque de reyes (Canción de hielo y fuego 2)\",\r\n        \"subtitle\": \"\",\r\n        \"synopsis\": \"Cuatro nobles se proclaman, a la vez, reyes legítimos, y las tierras de Poniente se estremecen entre guerras y traiciones. Un horror presidido por la más ominosa de las señales: un inmenso cometa color sangre suspendido en el cielo. Choque de reyes es el segundo volumen de Canción de hielo y fuego, la monumental saga de fantasía épica del escritor George R. R. Martin que ha vendido más de 20 millones de ejemplares en todo el mundo. La saga que inspiró la filmación de la aclamada serie televisiva de HBO: Game of Thrones. \\\"Ahora hay más reyes en el reino que ratas en un castillo\\\", afirma uno de los personajes de Choque de reyes. Y es que después de la sospechosa muerte de Robert Baratheon, el monarca de los Siete Reinos, su hijo Joffrey ha sido impuesto por la fuerza, aunque \\\"quienes realmente gobiernan son su madre, un eunuco y un enano\\\", como dice la voz del pueblo. Cuatro nobles se proclaman, a la vez, reyes legítimos, y las tierras de Poniente se estremecen entre guerras y traiciones. Y todo este horror se encuentra presidido por la más ominosa de las señales: un inmenso cometa color sangre suspendido en el cielo. En esta novela prodigiosa nada es realmente lo que parece ser. Los protagonistas, trazados con una complejidad asombrosa, son capaces de hacerse odiar o amar desde las primeras páginas. George R. R. Martin, con pulso firme y enérgico, vuelve a ofrecernos un brillante despliegue de personajes, en una trama rica, densa y sorprendente. Nos convierte en testigos de luchas fratricidas, intrigas y traiciones palaciegas en una tierra maldita por la guerra, donde fuerzas ocultas se alzan de nuevo y acechan para reinar en las noches del largo invierno que se avecina. La crítica ha dicho: \\\"Martin supera holgadamente las expectativas creadas con el primer título y continúa la que está llamada a ser una de las mejores series de fantasía de todos los tiempos.\\\" - The Denver Post\",\r\n        \"authors\": [\r\n            {\r\n                \"name\": \"George R. R. Martin\"\r\n            }\r\n        ],\r\n        \"publicationDate\": \"2014-04-04T00:00:00.000+0000\",\r\n        \"categories\": [\r\n            \"Ficcion\",\r\n            \"medieval\"\r\n        ],\r\n        \"isbn10\": \"6073123671\",\r\n        \"isbn13\": \"9786073123679\",\r\n        \"idGoogle\": \"jM42AwAAQBAJ\"\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "http://localhost:8083/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8083",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Book",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateBook($bookId: ID!, $book: BookEditInput!) {\n    updateBook(bookId: $bookId, book: $book) {\n        id\n        title\n        subtitle\n        synopsis\n        publicationDate\n        categories\n        isbn10\n        isbn13\n        idGoogle\n    }\n}",
								"variables": "{\n\t\"bookId\": \"b3907aa0-fc3f-4a14-b703-e2278abdd95b\",\n\t\"book\": {\n\t\t\"title\": \"Rayuela\"\n\t}\n}"
							}
						},
						"url": {
							"raw": "http://localhost:8083/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8083",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Book",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation delete($bookId: ID!) {\n    deleteBook(bookId: $bookId)\n}",
								"variables": "{\n\t\"bookId\": \"b3907aa0-fc3f-4a14-b703-e2278abdd95b\"\n}"
							}
						},
						"url": {
							"raw": "http://localhost:8083/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8083",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Book by id",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\n    book(bookId: \"a0022ca2-7076-494d-88ac-a75e582f5057\") {\n        id\n        title\n        subtitle\n        publicationDate\n        isbn10\n        isbn13\n        idGoogle\n        authors{\n            name\n        }\n        categories\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:8083/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8083",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Person",
			"item": [
				{
					"name": "Get Persons",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\n    persons {\n        id\n        name\n        surname\n        booksRead {\n            title\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:8083/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8083",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Person",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createPerson($person: PersonInput!) {\n    createPerson(person: $person) {\n        id\n        name\n        surname\n    }\n}",
								"variables": "{\n\t\"person\": {\n\t\t\"name\": \"scarlett\",\n\t\t\"surname\": \"johansson\"\n\t}\n}"
							}
						},
						"url": {
							"raw": "http://localhost:8083/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8083",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Person",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updatePerson($personId: ID!, $person: PersonEditInput!) {\n    updatePerson(personId: $personId, person: $person) {\n        id\n        name\n        surname\n        booksRead {\n            title\n        }\n    }\n}",
								"variables": "{\n\t\"personId\": \"89fb21d2-a254-4034-affb-dba02c037b4d\",\n\t\"person\": {\n\t\t\"name\": \"Bryan\",\n\t\t\"surname\": \"Cranston\"\n\t}\n}"
							}
						},
						"url": {
							"raw": "http://localhost:8083/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8083",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Person",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    deletePerson(personId: \"4ccf3cf6-90de-49ce-ae26-25044949e6b6\")\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:8083/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8083",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Person by id",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\n    person(personId: \"0eca8e17-8a28-4299-b11a-1a8538b52df0\") {\n        id\n        name\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:8083/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8083",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Read Book",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation readBook {\n    readBook(\n        personId: \"8233979a-a567-4d42-a245-57fb727954a4\",\n        bookId: \"e123fb62-3031-46ef-a8ef-b7f8e305aec0\"\n    ) {\n        id\n        name\n        surname\n        booksRead {\n            title\n        }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:8083/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8083",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}